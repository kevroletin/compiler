1:1	RESERVED_WORD	TOK_FUNCTION	function
1:10	IDENTIFIER	TOK_UNRESERVED	Fact
1:14	OPERATION	TOK_BRACKETS_LEFT	(
1:15	IDENTIFIER	TOK_UNRESERVED	n
1:16	DELIMITER	TOK_COLON	:
1:18	RESERVED_WORD	TOK_INTEGER	Integer
1:25	OPERATION	TOK_BRACKETS_RIGHT	)
1:26	DELIMITER	TOK_COLON	:
1:28	RESERVED_WORD	TOK_INTEGER	Integer
1:35	DELIMITER	TOK_SEMICOLON	;
2:1	RESERVED_WORD	TOK_BEGIN	begin
3:2	RESERVED_WORD	TOK_IF	if
3:5	IDENTIFIER	TOK_UNRESERVED	n
3:7	OPERATION	TOK_EQUAL	=
3:9	INT_CONST	TOK_UNRESERVED	1
3:11	RESERVED_WORD	TOK_THEN	then
4:3	IDENTIFIER	TOK_UNRESERVED	Result
4:10	OPERATION	TOK_ASSIGN	:=
4:13	INT_CONST	TOK_UNRESERVED	1
5:2	RESERVED_WORD	TOK_ELSE	else
6:3	IDENTIFIER	TOK_UNRESERVED	Result
6:10	OPERATION	TOK_ASSIGN	:=
6:13	IDENTIFIER	TOK_UNRESERVED	n
6:15	OPERATION	TOK_MULT	*
6:17	IDENTIFIER	TOK_UNRESERVED	Fact
6:21	OPERATION	TOK_BRACKETS_LEFT	(
6:22	IDENTIFIER	TOK_UNRESERVED	n
6:24	OPERATION	TOK_MINUS	-
6:26	INT_CONST	TOK_UNRESERVED	1
6:27	OPERATION	TOK_BRACKETS_RIGHT	)
6:28	DELIMITER	TOK_SEMICOLON	;
7:1	RESERVED_WORD	TOK_END	end
7:4	DELIMITER	TOK_SEMICOLON	;
7:5	END_OF_FILE	TOK_UNRESERVED	
